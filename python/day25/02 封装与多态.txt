1.以自己的理解说一下什么是组合
#组合就是一个对象的属性是另外一个类的对象
2.什么是多态，多态有哪些优点，可以在哪些场景使用多态
#一种事物的多种形态.在多态的背景下,可以不完全根据类型来使用对象,统一.动物叫
3.以自己的理解简述一下Python中鸭子类型，可以查阅资料，举出一个简单实例(代码实现)
像鸭子的就是鸭子
4.什么是封装，封装有哪些优点
#装就是把名字装到名称空间里,封就是该属性对内可见,对外隐藏
#属性:严格控制对属性的操作
#函数:隔离复杂度
5.完成综合体设计(整合今天所有知识点)
题：
	三个基础的宠物类 -- Cat类，Dog类，Pig类
	    属性：name(名字)、type(品种)
		name、type均为私有属性(对内可见，对外不可见)
		type属性为成员属性(由构造器__init__方法赋初值)
		但type对外又是可读可写(利用property装饰器实现)
		name属性初始化操作由父类完成(子类利用super()来实现)
	    方法：eat(self)
		均拥有eat的方法(父级继承)
		但实现体分别可以体现出 "吃猫粮"、"吃狗粮"、"吃猪粮"不同点(不同的实现)
	
	一个宠物的父类 -- Pet类
	    属性：name(名字)
		name为私有属性(对内可见，对外不可见)
		name属性为成员属性(由构造器__init__方法赋初值)
		但name对外又是可读可写(利用property装饰器实现)
	    方法：eat(self)
		拥有eat的方法(没有方法的实现体，利用abc模块实现)

	一个主人类 -- Master类
	    属性：name(名字)、pet(宠物)
		name、pet均为私有成员属性(具体操作同上面属性的操作)
	    方法：feed(self)
		拥有feed方法(方法只有self一个参数，没有多余的参数)
		feed方法实现要求
			-- "某某"主人准备好宠物粮食
			-- "某某品种"的"某某宠物"来进食
			-- 吃...(调用宠物自身的eat方法)
			注：""括起来的某某都是要被替换为具体的数据的
问：
	创建三个宠物主人，分别养的是不同的三种宠物
	三个主人进行喂食的时候，对应养的宠物就会完成进食
	其他细节自由补充








		

